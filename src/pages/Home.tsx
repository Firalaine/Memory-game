// src/pages/Home.tsx
import { useNavigate } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { RootState, AppDispatch } from '../store';
import { clearResults, setPlayerName } from '../gameSlice';
import { useForm, SubmitHandler } from 'react-hook-form';
import styles from './Home.module.css';

interface FormData {
  playerName: string;
}

export default function Home() {
  const dispatch = useDispatch<AppDispatch>();
  const { results } = useSelector((state: RootState) => state.game);
  const navigate = useNavigate();

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<FormData>({
    defaultValues: {
      playerName: '',
    },
  });

  const onSubmit: SubmitHandler<FormData> = (data) => {
    dispatch(setPlayerName(data.playerName || '–ì—ñ—Å—Ç—å'));
    navigate('/game');
  };

  return (
    <div className={styles.home}>
      <h1 className={styles.title}>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –≥—Ä–∏ –≤ –ø–∞–º‚Äô—è—Ç—å! üß†</h1>
      <form onSubmit={handleSubmit(onSubmit)} className={styles.playerForm}>
        <label htmlFor="playerName" className={styles.label}>
          –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è:
        </label>
        <input
          id="playerName"
          {...register('playerName', {
            required: '–Ü–º‚Äô—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–µ',
            minLength: {
              value: 2,
              message: '–Ü–º‚Äô—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 2 —Å–∏–º–≤–æ–ª–∏',
            },
            maxLength: {
              value: 20,
              message: '–Ü–º‚Äô—è –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 20 —Å–∏–º–≤–æ–ª—ñ–≤',
            },
          })}
          type="text"
          placeholder="–í–∞—à–µ —ñ–º‚Äô—è"
          className={styles.input}
        />
        {errors.playerName && <p className={styles.error}>{errors.playerName.message}</p>}
        <button type="submit" className={styles.button}>
          –ü–æ—á–∞—Ç–∏ –≥—Ä—É
        </button>
      </form>
      <h2 className={styles.subtitle}>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö —ñ–≥–æ—Ä</h2>
      {results.length === 0 ? (
        <p className={styles.info}>–©–µ –Ω–µ–º–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤. –ó—ñ–≥—Ä–∞–π—Ç–µ, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!</p>
      ) : (
        <>
          <table className={styles.table}>
            <thead>
              <tr>
                <th>–ù–æ–º–µ—Ä –≥—Ä–∏</th>
                <th>–ì—Ä–∞–≤–µ—Ü—å</th>
                <th>–•–æ–¥–∏</th>
                <th>–ß–∞—Å (—Å)</th>
              </tr>
            </thead>
            <tbody>
              {results.map((result) => (
                <tr key={result.gameNumber}>
                  <td>{result.gameNumber}</td>
                  <td>{result.playerName || '–ì—ñ—Å—Ç—å'}</td>
                  <td>{result.moves}</td>
                  <td>{result.duration}</td>
                </tr>
              ))}
            </tbody>
          </table>
          <button onClick={() => dispatch(clearResults())} className={styles.button}>
            –û—á–∏—Å—Ç–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
          </button>
        </>
      )}
    </div>
  );
}